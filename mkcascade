#!/bin/sh

set -e

REPO_ROOT_DIR=$(dirname "$SCRIPT")
TARGET_DIR=$REPO_ROOT_DIR/target
HD_PATH=$TARGET_DIR/kernel-hd
CASCADE_DIR=/var/cascade

if [ ! -f $TARGET_DIR/rootfs.tar.gz ]; then
  mkdir -p $TARGET_DIR
  wget -O $TARGET_DIR/rootfs.tar.gz https://distfiles.gentoo.org/releases/amd64/autobuilds/20240526T163557Z/stage3-amd64-openrc-20240526T163557Z.tar.xz
fi
if [ ! -d $CASCADE_DIR/bin ]; then
  mkdir -p $CASCADE_DIR
  tar xpf $TARGET_DIR/rootfs.tar.gz --xattrs-include='*.*' --numeric-owner -C $CASCADE_DIR

  echo "nameserver 8.8.8.8" | dd of=$CASCADE_DIR/etc/resolv.conf
  
  mount --rbind /dev $CASCADE_DIR/dev
  mount --make-rslave $CASCADE_DIR/dev
  mount -t proc /proc $CASCADE_DIR/proc
  mount --rbind /sys $CASCADE_DIR/sys
  mount --make-rslave $CASCADE_DIR/sys
  # TODO can we get away with this?
  # we just use a regular directory for /tmp
  # and delete it below
  # mount --rbind /tmp $CASCADE_DIR/tmp
  mkdir -p /tmp
  # Gentoo docs specifying mounting /run, but
  # we skip that because configs end up being
  # saved here and we want to copy it to the
  # final disk image, so we don't want anything
  # from the underlying host machine included.
  # mount --bind /run $CASCADE_DIR/run

  # Configure the image
  #
  # Enable the serial console and set lemurs as getty/login
  sed -i '/ttyS0/c\s0:12345:respawn:< /dev/ttyS0 > /dev/ttyS0 /bin/lemurs' $CASCADE_DIR/etc/inittab
  # this is if we want to use the standard init/getty
  # sed -i '/ttyS0/s/^#//' $CASCADE_DIR/etc/inittab
  # Configure PAM to allow access by lemurs
  cp $CASCADE_DIR/etc/pam.d/{login,lemurs}
  # Copy in the Cascade ebuild repo
  #
  # For now we put this in tmp because we need
  # to first create the local repo and then
  # copy these in with the appropriate permissions.
  cp -r ebuild $CASCADE_DIR/tmp/
  
  echo "
  #!/bin/sh

  set -e

  # Really we should uncomment this rather than
  # add a new line..
  echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen
  locale-gen
  
  # This assumes that there aren't any other USE flags
  # set by default.
  echo 'USE="dracut"' > /etc/portage/make.conf

  emerge-webrsync

  # unmerge definitely doesn't seem like the right
  # thing to do here, but this was causing a conflict
  #
  # https://www.gentoo.org/support/news-items/2024-05-09-python3-12.html
  #
  # The latest stage file doesn't include python 3.12 yet
  emerge --unmerge dev-python/hatchling
  emerge sys-kernel/gentoo-kernel-bin

  # Add a local repository
  emerge app-eselect/eselect-repository
  eselect repository create cascade
  mv /tmp/ebuild/* /var/db/repos/cascade
  rm -r /tmp/ebuild
  chown -R portage:portage /var/db/repos/cascade
  ebuild /var/db/repos/cascade/sys-auth/lemurs/*.ebuild manifest
  emerge sys-auth/lemurs
  " > $CASCADE_DIR/setup
  chmod +x $CASCADE_DIR/setup
  chroot $CASCADE_DIR /setup
  rm $CASCADE_DIR/setup

  umount -lf $CASCADE_DIR/dev
  umount -lf $CASCADE_DIR/proc
  umount -lf $CASCADE_DIR/sys
  # We don't want to exit this script early if there
  # are no files in here.
  rm -r $CASCADE_DIR/tmp/* || true

  # Make disk image
  dd if=/dev/zero of=$HD_PATH bs=1M count=10000
  
  TMP_MNT=/mnt/cascade
  mkdir -p $TMP_MNT
  mkfs.ext4 $HD_PATH
  mount $HD_PATH $TMP_MNT
  cp -r $CASCADE_DIR/* $TMP_MNT
  
  # Create blank root password
  passwd --root $TMP_MNT root -d
  
  umount $TMP_MNT
  unset TMP_MNT
fi

